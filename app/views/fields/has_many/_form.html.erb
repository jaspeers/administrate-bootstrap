<%#
# HasMany Form Partial

This partial renders an input element for belongs_to relationships.
By default, the input is a collection select box
that displays all possible records to associate with.
The collection select box supports multiple inputs,
and is augmented with [Selectize].

## Local variables:

- `f`:
  A Rails form generator, used to help create the appropriate input fields.
- `field`:
  An instance of [Administrate::Field::HasMany][1].
  Contains helper methods for displaying a collection select box.

[1]: http://www.rubydoc.info/gems/administrate/Administrate/Field/HasMany
[Selectize]: http://brianreavis.github.io/selectize.js
%>

<% if field.respond_to? :readonly? and  field.readonly? %>

  <%= f.label field.attribute, class: "col-lg-2 control-label"  %>

  <div class="col-lg-10">

    <% if field.resources.any? %>
      <%= render(
              "collection",
              collection_presenter: field.associated_collection,
              page_resource: page_resource,
              resources: field.resources,
              reorder_action: field.reorder_action
          ) %>

      <% if field.more_than_limit? %>
    <span>
      <%= t(
              'administrate.fields.has_many.more',
              count: field.limit,
              total_count: field.data.count,
          ) %>
    </span>
      <% end %>

    <% else %>
      <%= t("administrate.fields.has_many.none", default: "â€“") %>
    <% end %>

  </div>

<% else %>
  <%= f.label field.attribute, class: "col-lg-2 control-label"  %>
  <div class="col-lg-6">
    <%= f.select(field.attribute_key, nil, {}, {multiple: true, class: "form-control"}) do %>
      <%= options_for_select(field.associated_resource_options, field.selected_options) %>
    <% end %>
  </div>
<% end %>
